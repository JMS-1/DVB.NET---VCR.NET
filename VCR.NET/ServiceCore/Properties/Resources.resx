<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BadDuration" xml:space="preserve">
    <value>Ungültige Dauer</value>
  </data>
  <data name="BadName" xml:space="preserve">
    <value>Der Name enthält ungültige Zeichen</value>
  </data>
  <data name="BadRepeat" xml:space="preserve">
    <value>Die Aufzeichnungstage sind ungültig</value>
  </data>
  <data name="BadTVStation" xml:space="preserve">
    <value>Eine Quelle ist ungültig</value>
  </data>
  <data name="CreateWaitableTimer" xml:space="preserve">
    <value>Aufwecksignal kann nicht angelegt werden</value>
  </data>
  <data name="EndsBeforeStart" xml:space="preserve">
    <value>Der Endzeitpunkt darf nicht vor dem Startzeitpunkt liegen</value>
  </data>
  <data name="EPGDeleteDenied" xml:space="preserve">
    <value>Die Datei '{0}' zur Programmzeitschrift kann nicht gelöscht werden</value>
  </data>
  <data name="EPGFileCorrupted" xml:space="preserve">
    <value>Die Datei '{0}' zur Programmzeitschrift ist ungültig</value>
  </data>
  <data name="EPGMergeFailed" xml:space="preserve">
    <value>Fehler beim Aktualisieren der Programmzeitschrift: {0}</value>
  </data>
  <data name="HibernateFailed" xml:space="preserve">
    <value>Der Rechner kann nicht in den Schlafzustand versetzt werden</value>
  </data>
  <data name="Hibernating" xml:space="preserve">
    <value>Der Rechner wird in den Schlafzustand versetzt</value>
  </data>
  <data name="HibernationNotBlocked" xml:space="preserve">
    <value>Der Schlafzustand kann nicht verhindert werden</value>
  </data>
  <data name="HibernationNotUnblocked" xml:space="preserve">
    <value>Der Schlafzustand kann nicht erlaubt werden</value>
  </data>
  <data name="LastDayNotDate" xml:space="preserve">
    <value>Das Enddatum darf keine Uhrzeit enthalten</value>
  </data>
  <data name="NoProfile" xml:space="preserve">
    <value>Es gibt kein Geräteprofil '{0}'</value>
  </data>
  <data name="NoSchedules" xml:space="preserve">
    <value>Keine Aufzeichnungen vorhanden</value>
  </data>
  <data name="PSIReplace" xml:space="preserve">
    <value>Die Liste der Quellen wird ersetzt</value>
  </data>
  <data name="RecordingFinished" xml:space="preserve">
    <value>Aufzeichnung oder Aktualisierung {0} abgeschlossen</value>
  </data>
  <data name="RecordingStarted" xml:space="preserve">
    <value>Aufzeichnung oder Aktualisierung {0} wird gestartet</value>
  </data>
  <data name="RestartMessage" xml:space="preserve">
    <value>Das DVB.NETGerät wird neu gestartet</value>
  </data>
  <data name="RunExtension" xml:space="preserve">
    <value>Start der Erweiterung {0}</value>
  </data>
  <data name="StartWaitableTimer" xml:space="preserve">
    <value>Das Aufwecksignal wird aktiviert</value>
  </data>
  <data name="UserActive" xml:space="preserve">
    <value>Schlafzustand unterbunden da noch mindestens ein Anwender am Rechner interaktiv angemeldet ist</value>
  </data>
  <data name="WebServerReload" xml:space="preserve">
    <value>Web Server neu gestartet - dadurch kann die Systembelastung unnötig ansteigen</value>
  </data>
  <data name="WebServerStarted" xml:space="preserve">
    <value>Der Web Server wurde gestartet</value>
  </data>
  <data name="WebServerStopFailed" xml:space="preserve">
    <value>Der Web Server konnte nicht beendet werden</value>
  </data>
  <data name="WebServerStopFailedChannel" xml:space="preserve">
    <value>Die HTTP Verbindung konnte nicht beendet werden</value>
  </data>
  <data name="WebServerStopped" xml:space="preserve">
    <value>Der Web Server wurde beendet</value>
  </data>
  <data name="BadStreams" xml:space="preserve">
    <value>Die Aufzeichnungsoptionen sind ungültig</value>
  </data>
  <data name="SaveJobFailed" xml:space="preserve">
    <value>Die Datei zum Auftrag {0} kann nicht geschrieben werden</value>
  </data>
  <data name="Information_JobUpgrade" xml:space="preserve">
    <value>Der Auftrag {0} wird aktualisiert</value>
  </data>
  <data name="InternalError_NoProfile" xml:space="preserve">
    <value>DVB.NET Geräteprofil '{0}' nicht gefunden</value>
  </data>
  <data name="LoadProfiles" xml:space="preserve">
    <value>Die Geräteprofile werden geladen: {0}</value>
  </data>
  <data name="NoTVStation" xml:space="preserve">
    <value>Wenn einem Auftrag keine Quelle zugeordnet ist, so müssen alle Aufzeichnungen eine solche festlegen.</value>
  </data>
  <data name="BadUniqueID" xml:space="preserve">
    <value>Die eindeutige Kennung ist ungültig</value>
  </data>
  <data name="BadRuleFile" xml:space="preserve">
    <value>Fehler beim Einlesen der Regeldatei für die Aufzeichnungsplanung: {0}</value>
  </data>
  <data name="BadScheduleInformation" xml:space="preserve">
    <value>Es wird versucht, die Aufzeichnung '{1}' ({0}) mehrfach zu starten</value>
  </data>
  <data name="ScheduleInPast" xml:space="preserve">
    <value>Die Aufzeichnung liegt in der Vergangenheit</value>
  </data>
</root>